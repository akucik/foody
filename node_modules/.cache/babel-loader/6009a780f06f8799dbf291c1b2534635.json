{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = () => {\n  _s();\n\n  const [valueInput, setValueInput] = useState(\"\");\n  const [valueTouched, setValueTouched] = useState(false);\n  const valueIsValid = valueInput.trim() !== \"\" && valueTouched; // const [valueIsValid, setValueIsValid] = useState(true);\n\n  const valueChangeHandler = event => {\n    setValueInput(event.target.value);\n    setValueTouched(true);\n  };\n\n  console.log(\"valueIsValid\", valueIsValid);\n  return {\n    value: valueInput,\n    isValid: valueIsValid,\n    valueChangeHandler\n  };\n};\n\n_s(useInput, \"7WNTem2NB0XlIOwe7cL2FIUqtuA=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/cosimoranieri/Desktop/Foody/src/hooks/use-input.js"],"names":["useState","useInput","valueInput","setValueInput","valueTouched","setValueTouched","valueIsValid","trim","valueChangeHandler","event","target","value","console","log","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMM,YAAY,GAAGJ,UAAU,CAACK,IAAX,OAAsB,EAAtB,IAA4BH,YAAjD,CAJqB,CAMrB;;AAEA,QAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACpCN,IAAAA,aAAa,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACAN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAHD;;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BP,YAA5B;AACA,SAAO;AACLK,IAAAA,KAAK,EAAET,UADF;AAELY,IAAAA,OAAO,EAAER,YAFJ;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAlBD;;GAAMP,Q;;AAmBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useInput = () => {\n  const [valueInput, setValueInput] = useState(\"\");\n  const [valueTouched, setValueTouched] = useState(false);\n\n  const valueIsValid = valueInput.trim() !== \"\" && valueTouched;\n\n  // const [valueIsValid, setValueIsValid] = useState(true);\n\n  const valueChangeHandler = (event) => {\n    setValueInput(event.target.value);\n    setValueTouched(true);\n  };\n  console.log(\"valueIsValid\", valueIsValid);\n  return {\n    value: valueInput,\n    isValid: valueIsValid,\n    valueChangeHandler,\n  };\n};\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}