{"ast":null,"code":"var _jsxFileName = \"/Users/cosimoranieri/Desktop/Foody/src/components/CheckoutFormWithState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //Create a generic custom hook that takes the validation function as argument\n//Return inputIsValid, inputRef\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutFormWithState = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredSurname, setEnteredSurname] = useState(\"\");\n  const [enteredAddress, setEnteredAddress] = useState(\"\");\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const surnameInputHandler = event => {\n    setEnteredSurname(event.target.value);\n  };\n\n  const addressInputHandler = event => {\n    setEnteredAddress(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    let validUser;\n    validUser = enteredName.trim() !== \"\" && enteredSurname.trim() !== \"\";\n    let validAddress;\n    validAddress = enteredAddress.includes(\"@\");\n    let isFormValid;\n    isFormValid = validUser && validAddress;\n\n    if (!isFormValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredSurname, enteredAddress);\n    setEnteredName(\"\");\n    setEnteredSurname(\"\");\n    setEnteredAddress(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputHandler,\n        type: \"text\",\n        id: \"name\",\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"surname\",\n        children: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: surnameInputHandler,\n        type: \"text\",\n        id: \"surname\",\n        value: enteredSurname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Postcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: addressInputHandler,\n        type: \"text\",\n        id: \"address\",\n        value: enteredAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: props.onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutFormWithState, \"OBh5NoYGoUua3irpJtoRmV4hj8A=\");\n\n_c = CheckoutFormWithState;\nexport default CheckoutFormWithState;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutFormWithState\");","map":{"version":3,"sources":["/Users/cosimoranieri/Desktop/Foody/src/components/CheckoutFormWithState.js"],"names":["useState","CheckoutFormWithState","props","enteredName","setEnteredName","enteredSurname","setEnteredSurname","enteredAddress","setEnteredAddress","nameInputHandler","event","target","value","surnameInputHandler","addressInputHandler","formSubmitHandler","preventDefault","validUser","trim","validAddress","includes","isFormValid","console","log","onCancel"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\n//Create a generic custom hook that takes the validation function as argument\n//Return inputIsValid, inputRef\nconst CheckoutFormWithState = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredSurname, setEnteredSurname] = useState(\"\");\n  const [enteredAddress, setEnteredAddress] = useState(\"\");\n\n  const nameInputHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const surnameInputHandler = (event) => {\n    setEnteredSurname(event.target.value);\n  };\n  const addressInputHandler = (event) => {\n    setEnteredAddress(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    let validUser;\n    validUser = enteredName.trim() !== \"\" && enteredSurname.trim() !== \"\";\n    let validAddress;\n    validAddress = enteredAddress.includes(\"@\");\n    let isFormValid;\n    isFormValid = validUser && validAddress;\n\n    if (!isFormValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredSurname, enteredAddress);\n    setEnteredName(\"\");\n    setEnteredSurname(\"\");\n    setEnteredAddress(\"\");\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          onChange={nameInputHandler}\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n        ></input>\n      </div>\n      <div>\n        <label htmlFor=\"surname\">Surname</label>\n        <input\n          onChange={surnameInputHandler}\n          type=\"text\"\n          id=\"surname\"\n          value={enteredSurname}\n        ></input>\n      </div>\n      <div>\n        <label htmlFor=\"\">Postcode</label>\n        <input\n          onChange={addressInputHandler}\n          type=\"text\"\n          id=\"address\"\n          value={enteredAddress}\n        ></input>\n      </div>\n      <button>Submit</button>\n      <button type=\"button\" onClick={props.onCancel}>\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nexport default CheckoutFormWithState;\n"]},"metadata":{},"sourceType":"module"}