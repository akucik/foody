{"ast":null,"code":"var _jsxFileName = \"/Users/cosimoranieri/Desktop/Foody/src/components/CheckoutFormWithState.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\"; //Create a generic custom hook that takes the validation function as argument\n//Return inputIsValid, inputRef\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutFormWithState = props => {\n  _s();\n\n  const {\n    // value: nameInput,\n    isValid: nameInputIsValid,\n    hasError,\n    isTouched: nameInputTouched,\n    valueChangeHandler: nameChangeHandler\n  } = useInput(); // const [nameInput, setNameInput] = useState(\"\");\n\n  const [surnameInput, setSurnameInput] = useState(\"\");\n  const [addressInput, setAddressInput] = useState(\"\"); // const [nameInputIsValid, setNameInputIsValid] = useState(true);\n  // const [surnameInputIsValid, setSurnameInputIsValid] = useState(false);\n  // const [addressInputIsValid, setAddressInputIsValid] = useState(false);\n\n  const surnameChangeHandler = event => {\n    setSurnameInput(event.target.value);\n    console.log(surnameInput);\n  };\n\n  const addressChangeHandler = event => {\n    setAddressInput(event.target.value);\n    console.log(addressInput);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    const userIsValid = nameInputIsValid && surnameInput.trim() !== \"\";\n    const addressIsValid = addressInput.length >= 4;\n\n    if (userIsValid && addressIsValid) {\n      console.log(\"form is valid\");\n    } else {\n      console.log(\"form is invalid\");\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), !nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"surname\",\n        children: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"surname\",\n        onChange: surnameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Postcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        onChange: addressChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: props.onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutFormWithState, \"kqRQ2os3q+Odje4f/OLDhaT0azw=\", false, function () {\n  return [useInput];\n});\n\n_c = CheckoutFormWithState;\nexport default CheckoutFormWithState;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutFormWithState\");","map":{"version":3,"sources":["/Users/cosimoranieri/Desktop/Foody/src/components/CheckoutFormWithState.js"],"names":["useState","useInput","CheckoutFormWithState","props","isValid","nameInputIsValid","hasError","isTouched","nameInputTouched","valueChangeHandler","nameChangeHandler","surnameInput","setSurnameInput","addressInput","setAddressInput","surnameChangeHandler","event","target","value","console","log","addressChangeHandler","formSubmitHandler","preventDefault","userIsValid","trim","addressIsValid","length","onCancel"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CAEA;AACA;;;;AACA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM;AACJ;AACAC,IAAAA,OAAO,EAAEC,gBAFL;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,SAAS,EAAEC,gBAJP;AAKJC,IAAAA,kBAAkB,EAAEC;AALhB,MAMFT,QAAQ,EANZ,CADuC,CAQvC;;AAEA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD,CAXuC,CAavC;AACA;AACA;;AAEA,QAAMe,oBAAoB,GAAIC,KAAD,IAAW;AACtCJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACD,GAHD;;AAIA,QAAMU,oBAAoB,GAAIL,KAAD,IAAW;AACtCF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACD,GAHD;;AAKA,QAAMS,iBAAiB,GAAIN,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACO,cAAN;AAEA,UAAMC,WAAW,GAAGnB,gBAAgB,IAAIM,YAAY,CAACc,IAAb,OAAwB,EAAhE;AACA,UAAMC,cAAc,GAAGb,YAAY,CAACc,MAAb,IAAuB,CAA9C;;AAEA,QAAIH,WAAW,IAAIE,cAAnB,EAAmC;AACjCP,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AACD;AACF,GAZD;;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEE,iBAAhB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAEZ;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACL,gBAAD,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,SAAtB;AAAgC,QAAA,QAAQ,EAAEU;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,SAAtB;AAAgC,QAAA,QAAQ,EAAEM;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAElB,KAAK,CAACyB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7DD;;GAAM1B,qB;UAOAD,Q;;;KAPAC,qB;AA+DN,eAAeA,qBAAf","sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\n//Create a generic custom hook that takes the validation function as argument\n//Return inputIsValid, inputRef\nconst CheckoutFormWithState = (props) => {\n  const {\n    // value: nameInput,\n    isValid: nameInputIsValid,\n    hasError,\n    isTouched: nameInputTouched,\n    valueChangeHandler: nameChangeHandler,\n  } = useInput();\n  // const [nameInput, setNameInput] = useState(\"\");\n\n  const [surnameInput, setSurnameInput] = useState(\"\");\n  const [addressInput, setAddressInput] = useState(\"\");\n\n  // const [nameInputIsValid, setNameInputIsValid] = useState(true);\n  // const [surnameInputIsValid, setSurnameInputIsValid] = useState(false);\n  // const [addressInputIsValid, setAddressInputIsValid] = useState(false);\n\n  const surnameChangeHandler = (event) => {\n    setSurnameInput(event.target.value);\n    console.log(surnameInput);\n  };\n  const addressChangeHandler = (event) => {\n    setAddressInput(event.target.value);\n    console.log(addressInput);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    const userIsValid = nameInputIsValid && surnameInput.trim() !== \"\";\n    const addressIsValid = addressInput.length >= 4;\n\n    if (userIsValid && addressIsValid) {\n      console.log(\"form is valid\");\n    } else {\n      console.log(\"form is invalid\");\n      return;\n    }\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" onChange={nameChangeHandler}></input>\n        {!nameInputIsValid && <p>Name invalid</p>}\n      </div>\n      <div>\n        <label htmlFor=\"surname\">Surname</label>\n        <input type=\"text\" id=\"surname\" onChange={surnameChangeHandler}></input>\n      </div>\n      <div>\n        <label htmlFor=\"\">Postcode</label>\n        <input type=\"text\" id=\"address\" onChange={addressChangeHandler}></input>\n      </div>\n      <button>Submit</button>\n      <button type=\"button\" onClick={props.onCancel}>\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nexport default CheckoutFormWithState;\n"]},"metadata":{},"sourceType":"module"}